# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

variables:
  contentServer: content.lacledeslan.net

jobs:
- job: Dependencies
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - script: curl --fail --head "http://"$(contentServer)"/fastDownloads/csgo/maps/de_lltest.bsp.bz2"
    displayName: 'verify content server is reachable'
  - script: docker pull lacledeslan/steamcmd:linux
    displayName: 'pull lacledeslan/steamcmd:linux'
  - script: docker pull debian:stable-slim
    displayName: 'pull debian:stable-slim'
- job: Build
  timeoutInMinutes: 90
  dependsOn: Dependencies
  steps:
  - script: docker build . -f linux.Dockerfile -t lacledeslan/gamesvr-csgo --no-cache --build-arg BUILDNODE=Azure --build-arg contentServer=$(contentServer);
    displayName: 'Docker Build'
  - script: docker run --rm lacledeslan/gamesvr-csgo ./ll-tests/gamesvr-csgo.sh;
    displayName: 'Run Self Tests'
- job: Distribute
  timeoutInMinutes: 90
  dependsOn: Build
  condition: ne(variables['Build.Reason'], 'PullRequest')
  steps:
  - script: |
      docker images
      docker login -u $(dockerUser) -p $(dockerPass)
      docker push lacledeslan/gamesvr-csgo
    displayName: 'Push to Docker HUB'
  - script: curl -X POST  "https://hooks.microbadger.com/images/lacledeslan/gamesvr-csgo/$(microBadgerToken)"
    displayName: 'Update MicroBadger'
